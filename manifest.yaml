# manifest.yaml
name: document_qa_assistant
version: 1.1.0
description: |
  Answers domain-specific questions by retrieving context from indexed documents.

paths: &paths
  data_dir: data
  logs_dir: logs
  prompt_dir: prompts
  vector_store_dir: chroma_memory
  feedback_path: feedback/feedback.jsonl

models:
  defaults: &model_defaults
    provider: ollama
    temperature: 0.2
    max_tokens: 1024

  main:
    <<: *model_defaults
    model_id: llama3
    temperature: 0.3

  eval:
    <<: *model_defaults
    model_id: phi3-mini
    temperature: 0.0
    max_tokens: 512

memory:
  enabled: true
  backend: chromadb
  collection_name: agent_docs
  window_size: 3
  expiry_minutes: 90
  persistence_dir: *paths
  # the orchestrator will use paths.vector_store_dir

retrieval:
  enabled: true
  docs_path: data
  chunk_size: 300
  include_ext:
    - "*.txt"
    - "*.md"
  embeddings:
    model: all-MiniLM-L6-v2
    provider: sentence-transformers

guardrails:
  input_filters:
    prompt_injection_patterns:
      - "(ignore|disregard)\\s+previous\\s+instructions"
      - "(you are|pretend to be)\\s+a\\s+.*"
      - "(delete|disable|shutdown).*"
      - "(prompt|system):"
      - "(simulate|emulate)\\s+.*"
    profanity_list:
      - "damn"
      - "hell"
      - "shit"
      - "fuck"
  output_filters:
    - type: regex
      pattern: "(api_key|password|secret)[=:]\\S+"

eval:
  enabled: true
  thresholds:
    helpfulness_min: 3
    grounding_min: 3
  evals:
    - name: helpfulness
      type: llm-judge
      model: eval # alias of models.eval
    - name: grounding
      type: semantic_similarity
      model: eval
    - name: safety
      type: regex_filter

prompts:
  registry_dir: *paths
  files:
    - agent/system
    - agent/qa
    - agent/planner
    - eval/helpfulness
    - eval/grounding
    - reviewer/relevance

tools:
  enabled: true
  registry:
    - name: search_docs
      module: app.services.search
      class: SearchDocsTool
    - name: summarize
      module: app.services.summarize
      class: SummarizeTool

plugins:
  # Domain-specific capability packs. Each plugin can expose tools, routes, pipelines.
  - name: docs_qa
    module: app.domain.docs
    class: DocsQADomain
    enabled: true

logging:
  level: info
  format: json
  sinks:
    - stdout: true
    - file: logs/agent_run.log
