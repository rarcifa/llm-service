name: document_qa_assistant
version: 1.2.0
description: |
  Answers domain-specific questions by retrieving context from indexed documents.

# Reusable path anchors (each is a single string, not the whole mapping)
paths:
  data_dir: &DATA_DIR data
  logs_dir: &LOGS_DIR logs
  prompt_dir: &PROMPT_DIR prompts
  vector_store_dir: &VSTORE_DIR chroma_memory
  feedback_path: &FEEDBACK feedback/feedback.jsonl

models:
  defaults: &model_defaults
    provider: ollama
    temperature: 0.2
    max_tokens: 1024

  main:
    <<: *model_defaults
    model_id: llama3
    temperature: 0.3

  eval:
    <<: *model_defaults
    model_id: phi3-mini
    temperature: 0.0
    max_tokens: 512

memory:
  enabled: true
  backend: postgres # {chroma|postgres} â€” used by orchestrator/retriever wiring
  collection_name: agent_docs
  window_size: 3
  expiry_minutes: 90
  # For chroma we persist under paths.vector_store_dir
  persistence_dir: *VSTORE_DIR

retrieval:
  enabled: true
  backend: postgres # {chroma|postgres}; current code uses postgres
  docs_path: *DATA_DIR
  chunk_size: 300
  include_ext:
    - "*.txt"
    - "*.md"

  embeddings:
    provider: sentence-transformers
    model: all-MiniLM-L6-v2
    dim: 384 # helpful for pgvector validation and diagnostics
    device: auto # optional hint for your loader ("cpu"|"cuda"|"mps"|"auto")

  # Backend-specific options (safe to keep even if unused)
  chroma:
    metric: cosine # cosine | l2 | ip

  postgres:
    distance: cosine # l2 | ip | cosine (maps to vector_*_ops)
    index:
      type: hnsw # hnsw | ivfflat
      params:
        m: 16
        ef_construction: 64
      runtime:
        ef_search: 40
    ivfflat:
      lists: 100
      probes: 10

guardrails:
  input_filters:
    prompt_injection_patterns:
      - "(ignore|disregard)\\s+previous\\s+instructions"
      - "(you are|pretend to be)\\s+a\\s+.*"
      - "(delete|disable|shutdown).*"
      - "(prompt|system):"
      - "(simulate|emulate)\\s+.*"
    profanity_list:
      - "damn"
      - "hell"
      - "shit"
      - "fuck"
  output_filters:
    - type: regex
      pattern: "(api_key|password|secret)[=:]\\S+"
      replace: "[SECRET]"
      ignore_case: true

eval:
  enabled: true
  thresholds:
    helpfulness_min: 3
    grounding_min: 3
  evals:
    - name: helpfulness
      type: llm-judge
      model: eval # alias of models.eval
    - name: grounding
      type: semantic_similarity
      model: eval
    - name: safety
      type: regex_filter

prompts:
  registry_dir: *PROMPT_DIR
  files:
    - agent/system
    - agent/qa
    - agent/planner
    - eval/helpfulness
    - eval/grounding
    - reviewer/relevance

tools:
  enabled: true
  registry:
    - name: search_docs
      module: app.services.search
      class: SearchDocsTool
    - name: summarize
      module: app.services.summarize
      class: SummarizeTool

plugins:
  # Domain-specific capability packs. Each plugin can expose tools, routes, pipelines.
  - name: docs_qa
    module: app.domain.docs
    class: DocsQADomain
    enabled: true

logging:
  level: info
  format: json
  sinks:
    - stdout: true
    - file: logs/agent_run.log
